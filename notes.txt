Сдача:
  OpenApi:
    открыть: http://localhost:3000/spec-yaml
    проверить: https://editor.swagger.io/
    сохнанить в specification/specification.yml

  .env.example:
  +
  readme.md:
    Список всех переменных окружения приведён в файле readme.md, Формат описания: PARAM=value — описание.
    пути до всех и их содежимое
    
  Архив: zip без сжатия, только исходники
    имя файла: 2486639-grading.zip
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1. Backend  
  1.2. REST
    1.2.1. Реализовать фильтры по "Тип гитар", "Количество струн" и "Фильтр по цене" (нет на макете)
-----------------
  1.3. CLI все сделано
-----------------
2. Frontend
  2.1. Валидация (силами html и Backend) форм "Регистрация", "Вход" и "Карточка продукта"
  2.3. Фото при добавлении/редактировании товара:
         1. сделать по кнопке добавить/заменить
         2. сделать очистку по кнопре удалить
         3. отправка данных на сервер
           двойная перегонка formData...  components\product-form\product-form.tsx и store\action.ts
           попробовать как tmp-html-frontend\src\pages\register\register.tsx
         .... при редактировании текущее изображение (img src to file)? или изображение при редактировании делать не обязательным...
  2.4. Страница «Список товаров»
       const [searchParams, setSearchParams] = useSearchParams();
         1. Пагинация 
         2. Сортировка и сортировка по умолчанию - по дате по возрастанию
         3. Фильтры
           3.1. "Тип гитар"
           3.2. "Количество струн"
           3.3. "Фильтр по цене" (нет на макете)
           3.4. Кнопка "Очистить" фильры
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Не точности ТЗ:
  1.
    2.2.2. ... Остальные страницы доступны только авторизованным пользователям, кроме страницы регистрации, страницы вход и страницы 404.
    5.4.3. Получать список товаров могут авторизованные и неавторизованные клиенты.
  2.
    4.1.3. .... автоматически создаётся один пользователь — admin с паролем admin, но форма ввода будет не валидна и backend не пройдет...
      изменил '<input type="email" id="email"' -> '<input type="text" id="email"'
        !доделать: проверить что ввден 'admin' и только тогда менять тип!
  3. В макере добавления товара поменять название кнопки с "сохранить изменения" на "добавить новый товар"
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Заметки:
  просмотреть пометки //!
  проверить все ли пакеты задействованы из backend/package.json и frontend/package.json
    и сделать удаление файла, при обновлении или проверку на такой же, при не удачной валидации полей продукта (создание и обновление)
  catalog валидировать X-User-Id ?...
  Страница «Список товаров»
     фото товара - должна быть модалка с фото при наведении? и что такое / srcset ?
  наполение монго через имеющюуся модель и репозиторий, может как модуль? или все cli как app...........
  после действия удалить товар на странице «Список товаров»
    обновление списка почемeто не работает через Extra.dispatch... а при инициализации в "const store = configureStore(" ошибка...
    в action - useAppDispatch()(fetchProducts); срабатывает, но видимо не правильно обрабатываю в ProductList...
      сделал через useState: "const [needUpdate, setNeedUpdate] = useState(false);"
  Передача файлов с картинками для фронта
    сделал дополнять ссылку до url file-storage static
    поискать модуль перенаправления всего запроса с файлом на file-storage, нужет модуль nest.js Redirect? и запрос и ответ
  если останется время, то сделать fileId и его заполнение в rdo в api
  Куда переходить после добавления/редактировани товара, на просмотр карточки? оставаться на форме, а добавление поменять на редактирование?
    пока переходит в карточку товара
  Вставить email на форме входа, после успешной регистрации при перенаправления на вход
  Карточка товара - что делать с /*href="#characteristics"*/ и /*href="#description"*/ может есть вариант уравлять якорями?
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------

https://www.locode.dev/questions/42471755/convert-image-into-blob-using-javascript
1.
promise.downloadFile().then(function(imageElement){
    imageElement.crossOrigin = "anonymous"; // Set cross-origin attribute if not already set
    return imageElement.toBlob(function(blob) {
        var myBlob = blob;
    }, "image/jpeg");
});
2.
const image = document.querySelector('img[name="imageXXX"]');
// Read the image data as a blob
const blob = new Blob([image.src], 'image/jpg');
// Access the image data
const imageData = blob.blobFromStream();
