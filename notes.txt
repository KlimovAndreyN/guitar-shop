Сдача:
  OpenApi:
    открыть: http://localhost:3000/spec-yaml
    проверить: https://editor.swagger.io/
    сохнанить в specification/specification.yml

  .env.example:
  +
  readme.md:
    Список всех переменных окружения приведён в файле readme.md, Формат описания: PARAM=value — описание.
    пути до всех и их содежимое
    
  Архив: zip без сжатия, только исходники
    имя файла: 2486639-grading.zip

1. Backend  
  1.2. REST
    1.2.1. Реализовать фильтры по "Тип гитар", "Количество струн" и "Фильтр по цене" (нет на макете)
             в "Тип гитар" есть ограничение: акустические (6, 7, 12 струн), электрогитары (4, 6, 7), укулеле (4)
    1.2.2. Перенаправление файлов в file-storage
    1.2.3. Передача файлов с картинками для фронта
             Варинаты:
               1. раздать статику с api, т.к. папка там же
               2. клиенту дополнять ссылку до file-storage
               3. перенаправить весь запрос с файлом на file-storage, нужет модуль nest.js Redirect? и запрос и ответ
    1.2.4. Првоерить сортировку по умолчанию - по дате по возрастанию

  1.3. CLI
         1.3.1. Приложение предоставляет CLI. Для запуска предусмотрен отдельный сценарий в package.json — cli.
         1.3.2. Модуль, отвечающий за запуск CLI содержит корректный shebang.
         1.3.3. CLI предоставляет команду --generate <n> <connection string> для заполнения базы данных начальными данными. n — количество тестовых товаров для формирования. Изображения товаров используются из макета. connection string — строка с параметрами для подключения к базе данных. Во время подготовки тестовых данных автоматически создаётся один пользователь — admin с паролем admin. Пользователь является администратором (ему доступны все ресурсы).
         1.3.4. CLI предоставляет команду --help. Команда выводит информацию о доступных командах. Формат вывода остаётся на усмотрение студента.
         1.3.5. Запуск CLI без аргументов приводит к выполнению команды --help.

2. Frontend
  2.1. Валидация (силами html и Backend) форм "Регистрация", "Вход" и "Карточка продукта"
  2.2. Реализовать "Удаление" на странице «Список товаров»
         а нужно сделать подтверждение? в ui-kit.html есть подверждение, но скорее всего это относится к корзине...
  2.3. Фото при добавлении/редактировании товара:
         1. сделать по кнопке добавить/заменить
         2. сделать очистку по кнопре удалить
         3. отправка данных на сервер
  2.4. Страница «Список товаров»
         1. Пагинация
         2. Сортировка и сортировка по умолчанию - по дате по возрастанию
         3. Фильтры
           3.1. "Тип гитар"
           3.2. "Количество струн"
           3.3. "Фильтр по цене" (нет на макете)
           3.4. Кнопка "Очистить" фильры
  2.5. Куда переходить после добавления/редактировани товара, на просмотр карточки? оставаться на форме, а добавление поменять на редактирование?
  


Заметки:
  Страница «Список товаров»
     фото товара - должна быть модалка с фото при наведении? и что такое / srcset ?

  проверить все ли пакеты задействованы из backend/package.json и frontend/package.json
  проверить все переименовал в nx.json
  все ли удалил: NewsLetter, news-letter, NEWS_LETTER ?
  все ли удалил: refresh-token, JwtRefreshStrategy, refreshTokenPayload, refreshTokenSecret, refreshTokenExpiresIn
  удалить seed, как будет cli
  avatarFile, avatarPath
  добавить ограничение на логин и пароль 1 символ или не пустая строка!
  просмотреть пометки //!
  переименовал все ли readme, blog, post, blog-post -> product, BlogPost -> Product
  если после фронта останется время, то сделать fileId и редирект из api в file-storage
  и сделать удаление файла, при обновлении или проверку на такой же, при не удачной валидации полей продукта (создание и обновление)
  catalog валидировать X-User-Id ?...
  доделать - Применения фильтров в запросе!
  сделать кнопку показать/спрятать пароль при регистрации и авторизации
  вставить емайл на форме входа, после успешной регистрации и перенаправления на вход
  проверить ззаполнение полей на входе и регистрации и вывода ошибок валидации
  сделать хлебные крошки(breadcrumbs) при просмотре, добавлении и редактировании
  что делать с /*href="#characteristics"*/ и /*href="#description"*/ может есть вариант уравлять якорями?
  название кнопки при добавлении товара меняется по ТЗ с "сохранить изменения" на "добавить новый товар"
  /*checked*/
 
  двойная перегонка formData...  components\product-form\product-form.tsx и store\action.ts
    попробовать как tmp-html-frontend\src\pages\register\register.tsx
--
